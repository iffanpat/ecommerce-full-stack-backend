package routes

import (
	"ecommerce/internal/controllers"

	"github.com/gin-gonic/gin"
)

// üõ£Ô∏è SetupRoutes - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î API routes ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏£‡∏±‡∏ö gin.Engine ‡πÅ‡∏•‡∏∞ controllers ‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ã‡∏ï routing
func SetupRoutes(
	r *gin.Engine,
	productController *controllers.ProductController,
) {
	// üè• Health check endpoint - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ server ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	// GET /health ‡∏à‡∏∞ return ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á server
	r.GET("/health", func(c *gin.Context) {
		c.JSON(200, gin.H{
			"status":       "ok",                 // ‚úÖ server ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥
			"message":      "Server is running",  // üí¨ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
			"architecture": "MVC Pattern",        // üèóÔ∏è ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö architecture
			"apis":         []string{"products"}, // üìã APIs ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ
		})
	})

	// üÜï API version 1 group - ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° APIs ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 1
	// ‡∏ó‡∏∏‡∏Å API ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏°‡∏µ prefix "/api/v1"
	v1 := r.Group("/api/v1")
	{
		// üì¶ Product routes group - ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° APIs ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
		// ‡∏ó‡∏∏‡∏Å API ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏°‡∏µ prefix "/api/v1/products"
		products := v1.Group("/products")
		{
			products.GET("/", productController.ListProducts)

			// GET /api/v1/products/:id - ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏° ID
			// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: GET /api/v1/products/123
			products.GET("/:id", productController.GetProduct)

			// PUT /api/v1/products/:id/stock - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
			// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: PUT /api/v1/products/123/stock
			// ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ admin secret ‡πÉ‡∏ô header
			products.PUT("/:id/stock", productController.UpdateStock)
		}
	}

	// üîÑ Legacy routes - ‡πÄ‡∏Å‡πá‡∏ö APIs ‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠ backward compatibility
	// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö
	setupLegacyRoutes(r, productController)
}

// üîÑ setupLegacyRoutes - ‡πÄ‡∏ã‡∏ï APIs ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏™‡∏µ‡∏¢
// APIs ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ version prefix
func setupLegacyRoutes(
	r *gin.Engine,
	productController *controllers.ProductController,
) {
	// üì¶ Product routes only - ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ APIs ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

	// GET /products - ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°)
	r.GET("/products", productController.ListProducts)

	// GET /products/:id - ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏° ID (‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°)
	// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: GET /products/123
	r.GET("/products/:id", productController.GetProduct)

	// PUT /products/:id/stock - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°)
	// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: PUT /products/123/stock
	r.PUT("/products/:id/stock", productController.UpdateStock)
}

// üí° ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:
// 1. ‡πÉ‡∏ä‡πâ r.Group() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° routes ‡∏ó‡∏µ‡πà‡∏°‡∏µ prefix ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô
// 2. ‡πÉ‡∏ä‡πâ parameter ":id" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å URL path
// 3. ‡πÅ‡∏¢‡∏Å legacy routes ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏á‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
// 4. ‡πÉ‡∏ä‡πâ Health check endpoint ‡πÄ‡∏û‡∏∑‡πà‡∏≠ monitoring

// üõ†Ô∏è ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
//
// Health Check:
// GET http://localhost:8080/health
//
// ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:
// GET http://localhost:8080/products (legacy)
// GET http://localhost:8080/api/v1/products/ (v1)
//
// ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏° ID:
// GET http://localhost:8080/products/1 (legacy)
// GET http://localhost:8080/api/v1/products/1 (v1)
//
// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ï‡πá‡∏≠‡∏Å:
// PUT http://localhost:8080/products/1/stock (legacy)
// PUT http://localhost:8080/api/v1/products/1/stock (v1)
// Headers: X-Admin-Secret: your_secret
// Body: {"stock": 100}
